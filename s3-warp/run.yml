---

###
# Add task to read credential secrets
###

- hosts: localhost
  gather_facts: no

  vars:
    partition: stackhpc
    account: stackhpc
    creds: "{{ lookup('file', './creds.env') }}"
    max_job_time: "4:00:00"
    max_storage_capacity: 10TB
    smatrix_template_src: "s3-warp.sh.j2"
    smatrix_template_dest_dir: ./benchmark-runs
    smatrix_template_basename: s3
    smatrix_dimensions:
      # storage: ["pure", "caringo"]
      # benchmark_type: ["get"]
      # nodes: [1]
      # threads_per_node: [1]
      # objects_per_node: [10]
      # obj_sizes: ["10KiB"]
      # duration: ["10s"]
    # smatrix_dryrun: true
      storage: ["pure"]
      benchmark_type: ["get"]
      nodes: [1, 2, 10]
      threads_per_node: [1, 20, 50, 100]
      objects_per_node: [250]
      obj_sizes: ["10KiB", "10MiB", "100MiB", "1GiB"]

  tasks:

    - name: Fail if storage capacity breached
      fail:
        msg: "Total storage capacity required for run (= obj_size * nodes * objects_per_node) exceeds max_storage_capacity_TB"
      when: (item.0 | split('-') | last | regex_replace('iB', 'B') | human_to_bytes / 1024**4) * item.1 * item.2 > (max_storage_capacity | human_to_bytes / 1024**4)
      loop: "{{ smatrix_dimensions.obj_sizes | product(smatrix_dimensions.nodes, smatrix_dimensions.objects_per_node) | list }}"

    - name: Fail if too few files for 'get' benchmark
      fail:
        msg: 'objects_per_node is probably too small for a GET request benchmark'
      when: item.0 == 'get' and item.1 < 100
      loop: "{{ smatrix_dimensions.benchmark_type | product(smatrix_dimensions.objects_per_node) }}"

    - name: Check required credentials are present in env file
      fail:
        msg: No credentials for object store '{{ item }}' found in creds.env
      when: item | upper + '_ENDPOINT=' not in creds
      loop: "{{ smatrix_dimensions.storage }}"

    - name: Run object storage benchmarks
      import_role:
        name: smatrix